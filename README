### Build steps:
First of all you will need naclports (https://code.google.com/p/naclports/).
See https://code.google.com/p/naclports/wiki/HowTo_Checkout?tm=4

Once done, install the libarchive-fork from third-party of the unpacker
project. Note that you cannot use libarchive nor libarchive-dev packages from
naclports at this moment, as not all patches in the fork are upstreamed.

> cd third-party
>  NACLPORTS_PATH=[path-to-your-naclports] make

Build the (P)NaCl module. To use NaCl by default for "make" see unpacker/Makefile
for instructions.
> cd unpacker
> make  # For PNaCl.
> make debug_for_tests  # For PNaCl debug.
> make VALID_TOOLCHAINS=nacl  # For NaCl.
> make VALID_TOOLCHAINS=nacl debug_for_tests  # For NaCl debug.

In order to use Release / Debug or NaCl / PNaCl see js/background for
instructions.

### Steps for obtaining the extention code for releasing on Chrome store:
> cd unpacker
> ./release.sh [newlib|pnacl]  # First argument is optional and is either newlib
                               # or pnacl. Defaults to pnacl.

After running release.sh, the extension release code will be available in
unpacker-release directory.

### Use:
Load unpacked extension and open rar / zip archives.

### Debugging:
To see debug messages open chrome from a terminal and check the output.
For output redirection see
https://developer.chrome.com/native-client/devguide/devcycle/debugging.

### Testing:
Install Karma for tests runner (http://karma-runner.github.io/0.12/index.html),
Mocha for asynchronous testings (http://visionmedia.github.io/mocha/),
Chai for assertions (http://chaijs.com/) and Sinon for spies and stubs
(http://sinonjs.org/).

> npm install karma --save-dev
> npm install karma-chrome-launcher --save-dev
> npm install -g karma-cli
> npm install mocha --save-dev
> npm install karma-mocha --save-dev
> npm install karma-chai --save-dev
> npm install karma-sinon --save-dev
> npm install karma-chrome-launcher --save-dev

# Run tests:
> cd unpacker-test
> ./run_js_tests.sh  # JavaScript tests.
> ./run_cpp_tests.sh  # C++ tests.

# Run gdb:
> export CHROME_PATH=<path_to_chrome_with_file_system_provider_api_support>
> cd unpacker
> [GDB_SCRIPT=<gdb_script>] make gdb_debug  # GDB_SCRIPT part is optional.
